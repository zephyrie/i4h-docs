name: Build and Deploy Documentation

on:
  # Run on pushes to main branch
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'scripts/**'
      - 'mkdocs.yml'
      - 'requirements.txt'
      - '.github/workflows/deploy-docs.yml'
      - '**/README.md'
  # Run on manual workflow dispatch
  workflow_dispatch:
  # Run on PR to validate docs build
  pull_request:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install documentation dependencies
        run: |
          pip install -r requirements.txt
          pip install pyyaml  # For sync script

      # Build the documentation
      - name: Build documentation
        run: |
          mkdocs build --verbose

      # Upload the built site as an artifact
      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job - only runs on main branch
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
